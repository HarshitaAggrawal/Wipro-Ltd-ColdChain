{  
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{  
      "solutionType":{  
         "type":"string",
         "defaultValue":"ColdChain",
         "metadata":{  
            "description":"provide the name of the solution"
         }
      },
      "apiManagement":{
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "YES",
                "NO"
            ],
            "metadata": {
                "description":"Select YES/NO to deploy Api Management Service to provide security to function App.It also cost effective."
            }
        },
      "location":{  
         "type":"string",
         "defaultValue":"eastus2",
         "allowedValues":[  
            "eastus2",
            "centralus",
            "westus2",
            "westcentralus",
            "canadacentral",
            "canadaeast",
            "australiaeast",
            "australiasoutheast",
            "centralindia",
            "southindia",
            "eastasia",
            "southeastasia",
            "japanwest",
            "japaneast",
            "koreacentral",
            "koreasouth",
            "uksouth",
            "ukwest"
         ],
         "metadata":{  
            "description":"Choose the location where resources to be deployed"
         }
      },
      "appInsightsLocation":{  
         "type":"string",
         "defaultValue":"westus2",
         "allowedValues":[  
            "eastus",
            "northeurope",
            "southcentralus",
            "southeastasia",
            "westeurope",
            "westus2"
         ],
         "metadata":{  
            "description":"specify the region for application insights"
         }
      },
      "sqlAdministratorLogin":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"provide the user name for the SQL server, please make a note of Username this will be used further"
         }
      },
      "sqlAdministratorLoginPassword":{  
         "type":"securestring",
         "defaultValue":"",
         "metadata":{  
            "description":"provide the password for the SQL server, make a note of the Password this will be used further"
         }
      },
      "azureAccountName":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"azure portal login username"
         }
      },
      "tenantId":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Please provide Tenant Id of the subscription. This will be used to authenticate the Azure account while deploying the automation account"
         }
      },
      "clientID":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"please provide the Application clientID"
         }
      },
      "clientSecret":{  
         "type":"securestring",
         "defaultValue":"",
         "metadata":{  
            "description":"provide the Application Client Secret"
         }
      },
      "accountSasProperties":{  
         "type":"object",
         "defaultValue":{  
            "signedServices":"bfqt",
            "signedPermission":"rwdlacup",
            "signedExpiry":"2019-05-03T00:00:00Z",
            "signedProtocol":"https",
            "signedResourceTypes":"sco"
         },
         "metadata":{  
            "description":"Here we need to provide the immediate day/time gap between the deployment start and completion time in the place of signedExpiry"
         }
      },
      "functionAppUrl":{  
         "type":"string",
         "defaultValue":"https://storageccqia.blob.core.windows.net/cc-iot/cc-functionapp-1203.zip",
         "metadata":{  
            "description":"Please use function app build file url here which is in public storage"
         }
      },
      "webAppBuildfileUrl":{  
         "type":"string",
         "defaultValue":"https://storageccqia.blob.core.windows.net/cc-iot/AngularFrontEnd.zip",
         "metadata":{  
            "description":"Please use web app build file url here which is in public storage"
         }
      },
      "adminUsername":{  
         "type":"string",
         "defaultValue":"gethadmin",
         "metadata":{  
            "description":"Administrator username of each deployed VM (alphanumeric characters only)"
         }
      },
      "adminPassword":{  
         "type":"securestring",
         "defaultValue":"",
         "metadata":{  
            "description":"Administrator password for each deployed VM"
         }
      }
   },
   "variables":{  
      "appInsights":{  
         "appInsightsLocation":"[parameters('appInsightsLocation')]",
         "appInsightsApiVersion":"2014-04-01",
         "appInsightResourceName":"[concat('AppInsights', variables('suffix'))]"
      },
      "storageAccount":{  
         "storageAccountName":"[concat('storageaccount',variables('suffix'))]",
         "location":"[parameters('location')]",
         "storageAccountType":"Standard_LRS",
         "storageAccountType1":"Standard_GRS",
         "containerName":"cctitantelemetry",
         "containerName1":"shipmentdocuments",
         "dataxmlurl":"[concat(variables('artifactsBaseUrl'),'scripts/data.xml?token=AE7OLVI2YENFOXS7GJV2FAK4Z652Q')]",
         "accountSasProperties":"[parameters('accountSasProperties')]"
      },
      "documentDB":{  
         "location":"[parameters('location')]",
         "DocDBAccountName":"[variables('DocDBAccountName')]",
         "offerType":"Standard",
         "DocDBOfferThroughput":"400",
         "DocDBName":"TitanCosmosDB",
         "documentDBAuthKey":"[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('DocDBAccountName'))]",
         "readRegionLocation":"[variables('locationDR')]"
      },
      "iotHub":{  
         "iotHubName":"[variables('iotHubName')]",
         "location":"[parameters('location')]",
         "retentionTimeInDays":1,
         "partitionCount":4,
         "skuName":"S1",
         "skuCapacity":1,
         "iotHubResourceId":"[resourceId('Microsoft.Devices/Iothubs',variables('iotHubName'))]",
         "iotHubKeyResource":"[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName'))]",
         "iotHubKeyName":"[variables('iotHubKeyName')]"
      },
      "sqlServer":{  
         "serverName":"[concat('ccserver',variables('suffix'))]",
         "recoveryServerName":"[concat('recoveryccserver',variables('suffix'))]",
         "location":"[parameters('location')]",
         "locationDR":"[variables('locationDR')]",
         "sqlAdministratorLogin":"[parameters('sqlAdministratorLogin')]",
         "sqlAdministratorLoginPassword":"[parameters('sqlAdministratorLoginPassword')]",
         "recoverySqlAuthenticationLogin":"[parameters('sqlAdministratorLogin')]",
         "recoverySqlAuthenticationPassword":"[parameters('sqlAdministratorLoginPassword')]",
         "databaseName":"CCTitanDB",
         "databaseEdition":"Standard",
         "databaseCollation":"SQL_Latin1_General_CP1_CI_AS",
         "databaseMaxSizeBytes":"268435456000",
         "databaseRequestedServiceObjectiveName1":"S4",
         "storageKeyType":"SharedAccessKey",
         "storageKey":"?",
         "sqlFailoverGroupName":"[concat('azuresqlfailover', variables('suffix'))]"
      },
      "streamAnalytics":{  
         "nameDR":"[concat('StreamAnalyticsDR',variables('suffix'))]",
         "locationDR":"[variables('locationDR')]",
         "sku":"Standard",
         "tenantId":"[parameters('tenantId')]"
      },
      "azureFunction":{  
         "hostingPlanNameDR":"[concat('ConsumptionPlanDR',variables('suffix'))]",
         "functionAppNameDR":"[concat('ccfunappDR',variables('suffix'))]",
         "locationDR":"[variables('locationDR')]",
         "functionPackageURI":"[parameters('functionAppUrl')]",
         "tenantId":"[parameters('tenantId')]",
         "clientId":"[parameters('clientId')]",
         "clientSecret":"[parameters('clientSecret')]"
      },
      "apiManagement":{  
         "apiServiceNameDR":"[concat('apiserviceDR',variables('suffix'))]",
         "functionappNameDR":"[variables('azureFunction').functionAppNameDR]",
         "locationDR":"[variables('locationDR')]",
         "publisherEmail":"[parameters('azureAccountName')]",
         "publisherName":"www.coldchaintest.com",
         "skuName":"Developer",
         "skuCapacity":1,
         "backendApiNameDR":"[concat('ccbackendDR',variables('suffix'))]"
      },
      "webApp":{  
         "webSiteNameDR":"[concat(variables('webSiteNameDR'),variables('suffix'))]",
         "appSvcPlanSku1":"S1",
         "appSvcPlanNameDR":"[concat('AppServPlanDR',variables('suffix'))]",
         "locationDR":"[variables('locationDR')]",
         "WebAppPackageURI":"[parameters('webAppBuildfileUrl')]"
      },
      "trafficManagerSettings":{  
         "trafficManagerApiVersion":"2017-05-01",
         "trafficManagerName":"[concat('cctrafficmng-web',variables('suffix'))]",
         "trafficManagerName1":"[concat('cctrafficmng-fun',variables('suffix'))]",
         "trafficManagerName2":"[concat('cctrafficmng-tmt',variables('suffix'))]",
         "trafficRoutingMethod":"Priority"
      },
      "VMSettings":{  
         "vnetNameDR":"[concat('tmtvnet-dr',variables('suffix'))]",
         "subnetNameDR":"[concat('tmtsubnet-dr',variables('suffix'))]",
         "addressPrefix":"10.0.0.0/16",
         "subnetPrefix":"10.0.1.0/24",
         "publicIPAddressType":"Dynamic",
         "nicNameDR":"[concat('tmt-nic-dr',variables('suffix'))]",
         "pipNameDR":"[concat('tmtpipdr',variables('suffix'))]",
         "nsgNameDR":"[concat('tmtnsgdr',variables('suffix'))]",
         "dnsLabelPrefixDR":"[concat('tmtdnsdr',variables('suffix'))]",
         "locationDR":"[variables('locationDR')]",
         "vmSize":"Standard_D2s_v3",
         "Username":"[parameters('adminUsername')]",
         "Password":"[parameters('adminPassword')]",
         "imagePublisher":"Canonical",
         "imageOffer":"UbuntuServer",
         "ubuntuOSVersion":"18.04-LTS",
         "VmNameDR":"[concat('TMT-VMDR',variables('suffix'))]",
         "availabilitysetNameDR":"[concat('avsetDR',variables('suffix'))]",
         "fileUri":"[concat(variables('artifactsBaseUrl'),'scripts/tmt-latest-script.sh?token=AE7OLVIEH6SN53XXAJDXIA24Z7LUK')]"
      },
      "artifactsBaseUrl":"https://raw.githubusercontent.com/sysgain/PJ-TITAN-SECURE-COLD-CHAIN/dev/",
      "suffix":"[substring(uniqueString(resourceGroup().id), 0, 5)]",
      "DocDBAccountName":"[concat('ccdocdb',variables('suffix'))]",
      "iotHubName":"[concat('iothub',variables('suffix'))]",
      "iotHubKeyName":"iothubowner",
      "apiVersion":"2016-02-01",
      "webSiteName":"webapi",
      "webSiteNameDR":"recoveryapi",
      "eastus2":"centralus",
      "centralus":"eastus2",
      "westus2":"westcentralus",
      "westcentralus":"westus2",
      "canadacentral":"canadaeast",
      "canadaeast":"canadacentral",
      "australiaeast":"australiasoutheast",
      "australiasoutheast":"australiaeast",
      "centralindia":"southindia",
      "southindia":"centralindia",
      "eastasia":"southeastasia",
      "southeastasia":"eastasia",
      "japanwest":"japaneast",
      "japaneast":"japanwest",
      "koreacentral":"koreasouth",
      "koreasouth":"koreacentral",
      "uksouth":"ukwest",
      "ukwest":"uksouth",
      "locationDR":"[variables(parameters('location'))]"
   },
   "resources":[  
      {  
         "name":"StreamAnalyticsDR",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/streamanalytics-DR.json?token=AE7OLVLRCVIC6KDMND6IARS4Z64EI')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "streamAnalytics":{  
                  "value":"[variables('streamAnalytics')]"
               },
               "iotHub":{  
                  "value":"[variables('iotHub')]"
               },
               "documentDB":{  
                  "value":"[variables('documentDB')]"
               },
               "sqlServer":{  
                  "value":"[variables('sqlServer')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               },
               "storageAccount":{  
                  "value":"[variables('storageAccount')]"
               }
            }
         }
      },
      {  
         "name":"functionAppDR",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/functionapp-dr.json?token=AE7OLVOXYNYCBS4SCKHMTBS4Z64CG')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "azureFunction":{  
                  "value":"[variables('azureFunction')]"
               },
               "storageAccount":{  
                  "value":"[variables('storageAccount')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               },
               "appInsights":{  
                  "value":"[variables('appInsights')]"
               },
               "iotHub":{  
                  "value":"[variables('iotHub')]"
               },
               "documentDB":{  
                  "value":"[variables('documentDB')]"
               },
               "sqlServer":{  
                  "value":"[variables('sqlServer')]"
               },
               "trafficManagerSettings":{  
                  "value":"[variables('trafficManagerSettings')]"
               }
            }
         }
      },
      {  
         "name":"TrafficManagerFunRedeploy",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "condition":"[equals(parameters('apiManagement'),'NO')]",
         "dependsOn":[  
            "functionAppDR"
         ],
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/trafficmanager-fun-redeploy.json?token=AE7OLVPDA6ELGKHIB25MFOC4Z64FQ')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "azureFunction":{  
                  "value":"[variables('azureFunction')]"
               },
               "trafficManagerSettings":{  
                  "value":"[variables('trafficManagerSettings')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               }
            }
         }
      },
      {  
         "name":"RecoveryWebApp",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "dependsOn":[  
            "functionAppDR"
         ],
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/webapp-dr.json?token=AE7OLVKIKLKJN4WUGZVSOGK4Z64G6')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "webApp":{  
                  "value":"[variables('webApp')]"
               },
               "appInsights":{  
                  "value":"[variables('appInsights')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               },
               "storageAccount":{  
                  "value":"[variables('storageAccount')]"
               }
            }
         }
      },
      {  
         "name":"TrafficManagerWebRedeploy",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "dependsOn":[  
            "RecoveryWebApp"
         ],
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/trafficmanager-web-redeploy.json?token=AE7OLVNQNCQCUMMCENI4MAS4Z64GS')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "webApp":{  
                  "value":"[variables('webApp')]"
               },
               "trafficManagerSettings":{  
                  "value":"[variables('trafficManagerSettings')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               }
            }
         }
      },
      {  
         "name":"TMT-VM-DR",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/tmt-vm-dr.json?token=AE7OLVJ6G52JILX2VMFFR6K44TJII')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "VMSettings":{  
                  "value":"[variables('VMSettings')]"
               },
               "sqlServer":{  
                  "value":"[variables('sqlServer')]"
               },
               "storageAccount":{  
                  "value":"[variables('storageAccount')]"
               },
               "azureAccountName":{  
                  "value":"[parameters('azureAccountName')]"
               },
               "adminUsername":{  
                  "value":"[parameters('adminUsername')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               }
            }
         }
      },
      {  
         "name":"TrafficManagerTMTRedeploy",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"[variables('apiVersion')]",
         "dependsOn":[  
            "TMT-VM-DR"
         ],
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[concat(variables('artifactsBaseUrl'),'nested/trafficmanager-tmt-redeploy.json?token=AE7OLVLX2Z7WASRMOKIAWZK4Z64GE')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "VMSettings":{  
                  "value":"[variables('VMSettings')]"
               },
               "trafficManagerSettings":{  
                  "value":"[variables('trafficManagerSettings')]"
               },
               "solutionType":{  
                  "value":"[parameters('solutionType')]"
               }
            }
         }
      }
   ],
   "outputs":{  

   }
}
