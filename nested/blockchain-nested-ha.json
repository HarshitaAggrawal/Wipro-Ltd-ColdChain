{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "namePrefix": {
            "type": "string"
        },
        "authType": {
            "type": "string"            
        },
        "adminUsername": {
            "type": "string"           
        },
        "adminPassword": {
            "type": "securestring"
        },
        "adminSSHKey": {
            "type": "string"
        },
        "restrictAccess": {
            "type": "int"
        },
        "ipAddressOrSubnet": {
            "type": "string"
        },
        "numBlockMakers": {
            "type": "int"
        },
        "numVoters": {
            "type": "int"
        },
        "numObservers": {
            "type": "int"
        },
        "storagePerformance": {
            "type": "string"
        },
        "vmSize": {
            "type": "string"
        },
        "consortiumMemberId": {
            "type": "int"
        },
        "ethereumAccountPsswd": {
            "type": "securestring"
        },
        "passphrase": {
            "type": "securestring"
        },
        "ethereumNetworkID": {
            "type": "int"
        },
        "baseUrl": {
            "type": "string"
        },
        "scriptUrl":{
            "type": "string"
        },
        "trafficManagerSettings": {
           "type": "object"
        },
        "solutionType":{
            "type": "string"
        }
    },
    "variables": {       
        "scriptUrl": "[parameters('scriptUrl')]",
        "ARTIFACTS_URL_PREFIX":"[concat(parameters('baseUrl'),'/breach-monitor.sh')]",
        "apiVersion": "2016-02-01",
        "apiVersionDeployments": "2016-09-01",
        "apiVersionPublicIPAddresses": "2016-09-01",
        "apiVersionAvailabilitySets": "2016-04-30-preview",
        "apiVersionNetworkSecurityGroups": "2016-09-01",
        "apiVersionNetworkInterfaces": "2016-09-01",
        "apiVersionVirtualMachines": "2016-04-30-preview",
        "apiVersionVirtualNetworks": "2016-09-01",
        "namingInfix": "[toLower(substring(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
        "availabilitySetName": "[concat(variables('namingInfix'), 'quorumAvSet')]",
        "dnsName": "[variables('namingInfix')]",
        "publicIPAddressName": "[concat(variables('dnsName'), '-publicip')]",
        "loadBalancerName": "[concat(variables('namingInfix'), '-LB')]",
        "loadBalancerBackendAddressPoolName": "LoadBalancerBackend1",
        "loadBalancerInboundNatRuleNamePrefix": "Nat",
        "httpPort": 80,
        "sshPort": 22,
        "sshStartingPort": 3000,
        "adminSitePort": 3000,
        "gethRPCPort": 8545,
        "cakeShopStartingPort": 4000,
        "cakeShopPort": 4000,
        "gethIPCPort": 30303,
        "bmVMNamePrefix": "[concat(variables('namingInfix'), '-bm')]",
        "voterVMNamePrefix": "[concat(variables('namingInfix'), '-vtr')]",
        "observerVMNamePrefix": "[concat(variables('namingInfix'), '-obs')]",
        "bmNICPrefix": "[concat(variables('namingInfix'),'nic-bm')]",
        "voterNICPrefix": "[concat(variables('namingInfix'),'nic-voter')]",
        "observerNICPrefix": "[concat(variables('namingInfix'),'nic-observer')]",
        "subnetName": "[uniqueString(concat(resourceGroup().id, concat(variables('namingInfix'), 'subnet')))]",
        "subnetPrefix": "[replace('10._.0.0/24','_', string(parameters('consortiumMemberId')))]",
        "nsgName": "[concat(variables('namingInfix'), 'nsg')]",
        "sourceAddressPrefixArray": [
            "*",
            "[parameters('ipAddressOrSubnet')]"
        ],
        "sourceAddressPrefix": "[variables('sourceAddressPrefixArray')[parameters('restrictAccess')]]",
        "subnetPropertiesArray": [
            {
                "name": "[variables('subnetName')]",
                "properties": {
                    "addressPrefix": "[variables('subnetPrefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                }
            }
        ],
        "ubuntuImage": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
        },
        "vNet": {
            "name": "[concat(variables('namingInfix'), 'vnet')]",
            "addressSpacePrefix": "[replace('10._.0.0/20', '_',string(parameters('consortiumMemberId')))]"
        },
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').name)]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetName'))]",
        "noObserversOptionArray": [
            "-dummy",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ]
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionAvailabilitySets')]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "location": "[parameters('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "properties": {
                "platformUpdateDomainCount": "2",
                "platformFaultDomainCount": "2",
                "managed": "true"
            }
        },
        {
            "apiVersion": "[variables('apiVersionPublicIPAddresses')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "loadBalancerLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/loadBalancer.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "loadBalancerName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "dnsHostName": {
                        "value": "[variables('namingInfix')]"
                    },
                    "loadBalancerBackendAddressPoolName": {
                        "value": "[variables('loadBalancerBackendAddressPoolName')]"
                    },
                    "loadBalancerInboundNatRuleNamePrefix": {
                        "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
                    },
                    "frontendPort1": {
                        "value": "[variables('httpPort')]"
                    },
                    "backendPort1": {
                        "value": "[variables('adminSitePort')]"
                    },
                    "numInboundNATRules": {
                        "value": "[add(add(parameters('numVoters'), parameters('numBlockmakers')), parameters('numObservers'))]"
                    },
                    "inboundNATRuleCakeshopStartingPort": {
                        "value": "[variables('cakeShopStartingPort')]"
                    },
                    "inboundNATRuleCakeshopBackendPort": {
                        "value": "[variables('cakeShopPort')]"
                    },
                    "inboundNATRuleSSHStartingPort": {
                        "value": "[variables('sshStartingPort')]"
                    },
                    "inboundNATRuleSSHBackendPort": {
                        "value": "[variables('sshPort')]"
                    },
                    "publicIPAddressName": {
                        "value": "[variables('publicIPAddressName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetworkSecurityGroups')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('sshPort')]",
                            "sourceAddressPrefix": "[variables('sourceAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-cakeshop",
                        "properties": {
                            "description": "Allow cakeshop IDE",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[concat(string(variables('cakeShopStartingPort')),'-', string(sub(add(4000, add(parameters('numBlockMakers'), add(parameters('numObservers'), parameters('numVoters')))),1)))]",
                            "sourceAddressPrefix": "[variables('sourceAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-etheradmin",
                        "properties": {
                            "description": "Allow etheradmin site",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('adminSitePort')]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "block-bootnodes",
                        "properties": {
                            "description": "Block Internet Bootnodes",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('gethIPCPort')]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "BM0_RPC_Port_IN_8545",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8545",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 113,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "BM0_RPC_Port_OUT_8545",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8545",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersionVirtualNetworks')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet').name]",
            "location": "[parameters('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet').addressSpacePrefix]"
                    ]
                },
                "subnets": "[variables('subnetPropertiesArray')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "bmVMLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet').name)]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "loadBalancerLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/blockmaker.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersionVirtualMachines": {
                        "value": "[variables('apiVersionVirtualMachines')]"
                    },
                    "apiVersionNetworkInterfaces": {
                        "value": "[variables('apiVersionNetworkInterfaces')]"
                    },
                    "storagePerformance": {
                        "value": "[parameters('storagePerformance')]"
                    },
                    "loadBalancerName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "loadBalancerBackendAddressPoolName": {
                        "value": "[variables('loadBalancerBackendAddressPoolName')]"
                    },
                    "loadBalancerInboundNatRuleNamePrefix": {
                        "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
                    },
                    "subnetRef": {
                        "value": "[variables('subnetRef')]"
                    },
                    "vmNamePrefix": {
                        "value": "[variables('bmVMNamePrefix')]"
                    },
                    "numVMs": {
                        "value": "[parameters('numBlockMakers')]"
                    },
                    "offset": {
                        "value": 0
                    },
                    "nicPrefix": {
                        "value": "[variables('bmNICPrefix')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('availabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminSSHKey": {
                        "value": "[parameters('adminSSHKey')]"
                    },
                    "ubuntuImage": {
                        "value": "[variables('ubuntuImage')]"
                    },
                    "namingInfix": {
                        "value": "[variables('namingInfix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "voterVMLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet').name)]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "loadBalancerLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/votervm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersionVirtualMachines": {
                        "value": "[variables('apiVersionVirtualMachines')]"
                    },
                    "apiVersionNetworkInterfaces": {
                        "value": "[variables('apiVersionNetworkInterfaces')]"
                    },
                    "storagePerformance": {
                        "value": "[parameters('storagePerformance')]"
                    },
                    "loadBalancerName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "loadBalancerBackendAddressPoolName": {
                        "value": "[variables('loadBalancerBackendAddressPoolName')]"
                    },
                    "loadBalancerInboundNatRuleNamePrefix": {
                        "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
                    },
                    "subnetRef": {
                        "value": "[variables('subnetRef')]"
                    },
                    "vmNamePrefix": {
                        "value": "[variables('voterVMNamePrefix')]"
                    },
                    "numVMs": {
                        "value": "[parameters('numVoters')]"
                    },
                    "offset": {
                        "value": "[parameters('numBlockMakers')]"
                    },
                    "nicPrefix": {
                        "value": "[variables('voterNICPrefix')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('availabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminSSHKey": {
                        "value": "[parameters('adminSSHKey')]"
                    },
                    "ubuntuImage": {
                        "value": "[variables('ubuntuImage')]"
                    },
                    "namingInfix": {
                        "value": "[variables('namingInfix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "observerVMLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet').name)]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "loadBalancerLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/observervm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersionVirtualMachines": {
                        "value": "[variables('apiVersionVirtualMachines')]"
                    },
                    "apiVersionNetworkInterfaces": {
                        "value": "[variables('apiVersionNetworkInterfaces')]"
                    },
                    "storagePerformance": {
                        "value": "[parameters('storagePerformance')]"
                    },
                    "loadBalancerName": {
                        "value": "[variables('loadBalancerName')]"
                    },
                    "loadBalancerBackendAddressPoolName": {
                        "value": "[variables('loadBalancerBackendAddressPoolName')]"
                    },
                    "loadBalancerInboundNatRuleNamePrefix": {
                        "value": "[variables('loadBalancerInboundNatRuleNamePrefix')]"
                    },
                    "subnetRef": {
                        "value": "[variables('subnetRef')]"
                    },
                    "vmNamePrefix": {
                        "value": "[variables('observerVMNamePrefix')]"
                    },
                    "numVMs": {
                        "value": "[parameters('numObservers')]"
                    },
                    "offset": {
                        "value": "[add(parameters('numBlockMakers'), parameters('numVoters'))]"
                    },
                    "nicPrefix": {
                        "value": "[variables('observerNICPrefix')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('availabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminSSHKey": {
                        "value": "[parameters('adminSSHKey')]"
                    },
                    "ubuntuImage": {
                        "value": "[variables('ubuntuImage')]"
                    },
                    "namingInfix": {
                        "value": "[variables('namingInfix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "vmExtensionLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "bmVMLinkedTemplate",
                "voterVMLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/VMExtension.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bmVMNamePrefix": {
                        "value": "[variables('bmVMNamePrefix')]"
                    },
                    "numBMs": {
                        "value": "[parameters('numBlockMakers')]"
                    },
                    "voterVMNamePrefix": {
                        "value": "[variables('voterVMNamePrefix')]"
                    },
                    "numVoters": {
                        "value": "[parameters('numVoters')]"
                    },
                    "observerVMNamePrefix": {
                        "value": "[variables('observerVMNamePrefix')]"
                    },
                    "numObservers": {
                        "value": "[parameters('numObservers')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "ethereumAccountPsswd": {
                        "value": "[parameters('ethereumAccountPsswd')]"
                    },
                    "passphrase": {
                        "value": "[parameters('passphrase')]"
                    },
                    "ethereumNetworkID": {
                        "value": "[parameters('ethereumNetworkID')]"
                    },
                    "gethIPCPort": {
                        "value": "[variables('gethIPCPort')]"
                    },
                    "adminSitePort": {
                        "value": "[variables('adminSitePort')]"
                    },
                    "cakeshopFqdn": {
                        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
                    },
                    "cakeshopStartingPort": {
                        "value": "[variables('cakeShopStartingPort')]"
                    },
                    "artifactsLocationURL": {
                        "value": "[parameters('baseUrl')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "vmExtensionLinkedTemplate-scr2",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "vmExtensionLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/bm0-extension.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bmVMNamePrefix": {
                        "value": "[variables('bmVMNamePrefix')]"
                    },
                    "numBMs": {
                        "value": "[parameters('numBlockMakers')]"
                    },
                    "ARTIFACTS_URL_PREFIX": {
                        "value": "[variables('ARTIFACTS_URL_PREFIX')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "scriptUrl":{
                        "value": "[variables('scriptUrl')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "vmExtensionLinkedTemplateObservers",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "observerVMLinkedTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('baseUrl'), '/nested/VMExtension-observer.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bmVMNamePrefix": {
                        "value": "[variables('bmVMNamePrefix')]"
                    },
                    "numBMs": {
                        "value": "[parameters('numBlockMakers')]"
                    },
                    "voterVMNamePrefix": {
                        "value": "[variables('voterVMNamePrefix')]"
                    },
                    "numVoters": {
                        "value": "[parameters('numVoters')]"
                    },
                    "observerVMNamePrefix": {
                        "value": "[variables('observerVMNamePrefix')]"
                    },
                    "numObservers": {
                        "value": "[parameters('numObservers')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "ethereumAccountPsswd": {
                        "value": "[parameters('ethereumAccountPsswd')]"
                    },
                    "passphrase": {
                        "value": "[parameters('passphrase')]"
                    },
                    "ethereumNetworkID": {
                        "value": "[parameters('ethereumNetworkID')]"
                    },
                    "gethIPCPort": {
                        "value": "[variables('gethIPCPort')]"
                    },
                    "adminSitePort": {
                        "value": "[variables('adminSitePort')]"
                    },
                    "cakeshopFqdn": {
                        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
                    },
                    "cakeshopStartingPort": {
                        "value": "[variables('cakeShopStartingPort')]"
                    },
                    "artifactsLocationURL": {
                        "value": "[parameters('baseUrl')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('trafficManagerSettings').trafficManagerApiVersion]",
            "type": "Microsoft.Network/trafficmanagerprofiles",
            "name": "[parameters('trafficManagerSettings').trafficManagerName3]",
            "location": "global",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "trafficRoutingMethod": "[parameters('trafficManagerSettings').trafficRoutingMethod]",
                "dnsConfig": {
                    "relativeName": "[parameters('trafficManagerSettings').trafficManagerName3]",
                    "ttl": "100"
                },
                "monitorConfig": {
                    "protocol": "TCP",
                    "port": "8545",
                    "path": ""
                },
                "endpoints": [
                    {
                        "name": "[variables('publicIPAddressName')]",
                        "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                            "weight": 1,
                            "priority": 1,
                            "endpointLocation": "[parameters('location')]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "admin-site": {
            "type": "string",
            "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        },
        "ssh-to-first-vm": {
            "type": "string",
            "value": "[concat('ssh -p ', variables('sshStartingPort'), ' ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        },
        "BlockchainLBIP":{
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}
